import React, { Fragment, useEffect, useState } from 'react';
import ReactDOM from 'react-dom';
import { CardMedia, AppBar, Collapse, Toolbar, Typography, FormLabel, Card, Box, Link, Button, Grid, Container, TextField, Paper, CardHeader, Avatar, CardContent, CardActions, IconButton} from '@material-ui/core';
// import { LikeIcon, CommentIcon} from '@material-ui/icons';
import ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';
import PersonIcon from '@material-ui/icons/Person';
import { makeStyles } from '@material-ui/core/styles';
import api from '../../config/api';
import { blue } from '@material-ui/core/colors';
import { DataGrid } from '@material-ui/data-grid';
import clsx from 'clsx';
import BlogPost from '../BlogPost';
// import ViewBlogPost from '../ViewBlogPage';

const useStyles = makeStyles((theme) => ({
    container:{
        padding: theme.spacing(2),
    },
    root:{
        maxWidth: 500,
        // backgroundColor: blue,
    },
    logout: {
        marginLeft: 'auto',
      },
    avatar: {
        backgroundColor: blue[500],
    },
    image: {
        height: 0,
        paddingTop: '56.25%', // 16:9
      },
      expand: {
        transform: 'rotate(0deg)',
        transition: theme.transitions.create('transform', {
          duration: theme.transitions.duration.shortest,
        }),
      },
      commentor: {
        fontSize: 17,
        margin: 0,
        textAlign: 'left',
        textTransform: 'uppercase'
    },
    comments: {
        fontStyle: 'italic',
        fontSize: 15,
        textAlign: 'left',
    },
    comment_time:{
        textAlign: "left",
        color: "gray",
        fontSize: 10,
    },
}));


function AuthorPosts() {
    const columns = [
        { field: 'id', headerName: '#', width: 85 },
        {
          field: 'authorName',
          headerName: 'Author Name',
          width: 200,
          editable: false,
        },
        {
          field: 'datePosted',
          headerName: 'Date Posted',
          width: 200,
          editable: false,
        },
        {
          field: 'likes',
          headerName: 'Like/s',
          width: 120,
          editable: false,
        },
        {
        field: 'comments',
          headerName: 'Comment/s',
          width: 150,
          editable: false,
        },
        {
        field: 'actions',
            headerName: 'Action',
            width: 160,
            editable: false,
        },
      ];
      
      const rows = [
    //         blogs.map((blog) => (
    //             {id:blog.id,}
    //         ))
        { id: 1, authorName: 'Snow', datePosted: 'Jon', likes: 35, comments: 35, actions: 35 },
      ];
    const classes = useStyles();
    const userName =  document.querySelector("meta[name='user-name']").getAttribute('content');
    const [blogs, setBlogs] = useState([]);

    const fetchBlogs = () => {
        api.get('/author/getPosts').then((response) => {
            setBlogs(response.data.blogs)
        });
    }
    // console.log(fetchBlogs())
    console.log(blogs)
    useEffect(() => {
        fetchBlogs()
        blogs.map((blog) => (
            console.log(blog.id)
        ))
        
    }, []);

    return(
        <Container className={classes.container}maxWidth="md" >
            <AppBar color="secondary">
                <Toolbar>
                    <Typography color="initial" variant='body1'>
                            BlogZilla
                    </Typography>
                    <Button color="inherit" href="/author" style={{ marginLeft: "20px" }}>
                        Dashboard
                    </Button>
                    <Button color="inherit" href="/author/posts">
                         Posts
                    </Button>
                    <Box className={classes.logout}>
                        <Button color="inherit">
                            <PersonIcon></PersonIcon>{userName}
                        </Button>
                        <Button href="/logout" color="inherit">
                        LogOut
                        </Button>
                    </Box>
                </Toolbar>
            </AppBar>
            {
                // console.log(blog.id)
            }
            <Toolbar />
            <div style={{ height: 300, width: '100%', textAlign: "center" }}>
            <DataGrid
                rows={rows}
                columns={columns}
                pageSize={5}
                // checkboxSelection
                disableSelectionOnClick
                
            />
            </div>
        </Container>
    );
};

export default AuthorPosts;

if (document.getElementById('authorManagePosts')) {
    ReactDOM.render(<AuthorPosts />, document.getElementById('authorManagePosts'));
  }